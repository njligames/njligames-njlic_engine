include(${${CMAKE_PROJECT_NAME}_REPO_DIRECTORY}/cmake/macros.cmake)

set(${CMAKE_PROJECT_NAME}_SWIG_ENABLED_BY_DEFAULT ON)
set(${CMAKE_PROJECT_NAME}_SWIG ${${CMAKE_PROJECT_NAME}_SWIG_ENABLED_BY_DEFAULT} CACHE BOOL "Build the swig module for ${CMAKE_PROJECT_NAME}")

list(APPEND CMAKE_MODULE_PATH "${${CMAKE_PROJECT_NAME}_REPO_DIRECTORY}/cmake")

if(${CMAKE_PROJECT_NAME}_SWIG)
  if(${CMAKE_VERSION} VERSION_LESS "3.11")
    message("Please consider to switch to CMake 3.11 in order to use SWIG")
  else()
    find_package(SWIG REQUIRED)

    if(${SWIG_FOUND})
      MESSAGE(STATUS "SWIG_FOUND ${SWIG_FOUND}")
      MESSAGE(STATUS "SWIG_DIR ${SWIG_DIR}")
      MESSAGE(STATUS "SWIG_EXECUTABLE ${SWIG_EXECUTABLE}")
      MESSAGE(STATUS "SWIG_VERSION ${SWIG_VERSION}")

      include(${SWIG_USE_FILE})

      set(CMAKE_SWIG_FLAGS "")

      file(GLOB_RECURSE SWIG_SOURCE_FILES
        ${${CMAKE_PROJECT_NAME}_REPO_DIRECTORY}/swig.in/script/*.swg
        )

      list(APPEND SWIG_SOURCE_FILES
        "${${CMAKE_PROJECT_NAME}_REPO_DIRECTORY}/swig.in/script/njli/njlic.i" 
        )

      foreach(_SWIG_SOURCE_FILE ${SWIG_SOURCE_FILES})
        MESSAGE(STATUS "_SWIG_SOURCE_FILE ${_SWIG_SOURCE_FILE}")
      endforeach()

      SUBDIRLIST(SUBDIRS "${${CMAKE_PROJECT_NAME}_REPO_DIRECTORY}/swig.in/script" SWIGIN_SCRIPTS_INCLUDE_DIRECTORY_LIST)

      set_source_files_properties( "${SWIG_SOURCE_FILES}"  PROPERTIES 
        SWIG_FLAGS "-fcompact"
        SWIG_FLAGS "-fvirtual"
        SWIG_FLAGS "-v"
        SWIG_FLAGS "-w201"
        SWIG_FLAGS "-w312"
        SWIG_FLAGS "-c++"
        SWIG_FLAGS "-includeall"
        CPLUSPLUS ON
        SWIG_INCLUDE_DIRECTORIES ${SWIGIN_SCRIPTS_INCLUDE_DIRECTORY_LIST}
        )

      include_directories("${${CMAKE_PROJECT_NAME}_REPO_DIRECTORY}/swig.in/script" ${SWIGIN_SCRIPTS_INCLUDE_DIRECTORY_LIST})

      foreach(_SWIGIN_SCRIPTS_INCLUDE_DIRECTORY ${SWIGIN_SCRIPTS_INCLUDE_DIRECTORY_LIST})
        MESSAGE(STATUS "_SWIGIN_SCRIPTS_INCLUDE_DIRECTORY ${_SWIGIN_SCRIPTS_INCLUDE_DIRECTORY}")
      endforeach()

      swig_add_library(
        ${CMAKE_PROJECT_NAME}-lua-static
        TYPE STATIC
        LANGUAGE lua
        SOURCES "${SWIG_SOURCE_FILES}"
        OUTPUT_DIR ${${CMAKE_PROJECT_NAME}_REPO_DIRECTORY}/swig/lua
        OUTFILE_DIR ${${CMAKE_PROJECT_NAME}_REPO_DIRECTORY}/swig/lua
      )
      set_property(TARGET ${CMAKE_PROJECT_NAME}-lua-static PROPERTY SWIG_COMPILE_DEFINITIONS NJLIC_SWIG SWIG_TYPE_TABLE=myprojectname)

      TARGET_LINK_LIBRARIES(${CMAKE_PROJECT_NAME}-lua-static ${CMAKE_PROJECT_NAME}-static)

    endif()
  endif()
endif()
